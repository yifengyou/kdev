#==========================================================================
# Description: name: qcow2 build arm64
#==========================================================================

name: qcow2 build arm64

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      os_release:
        description: "Select OS Release"
        required: true
        type: choice
        options:
          - "ubuntu_12.04"
          - "ubuntu_14.04"
          - "ubuntu_18.04"
          - "ubuntu_22.04"
          - "ubuntu_24.04"


env:
  TZ: America/New_York

jobs:
  build:
    runs-on: ubuntu-24.04-arm
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install KVM/QEMU
        run: |
          sudo apt update
          sudo apt install -y qemu-kvm libvirt-daemon-system virtinst cpu-checker rar
          sudo systemctl enable --now libvirtd
          sudo mkdir -p /builder/
          sudo mkdir -p /builder/release
          sudo chown -R runner.runner /builder

      - name: Clone kdev project
        id: clone_kdev
        working-directory: /builder/
        run: |
          git clone -q --single-branch --depth=1 --branch=master https://github.com/yifengyou/kdev.git kdev.git
          echo "status=success" >> ${GITHUB_OUTPUT}

      - name: Build rootfs in vm
        id: build_vm
        run: |
          sudo chmod 777 /dev/kvm
          ls -alh /dev/kvm
          cd /builder/kdev.git/${{ inputs.os_release }}/qcow2/arm64 && \
            sudo ./build-vm.sh && \
            ls -alh
          echo "status=success" >> ${GITHUB_OUTPUT}

      - name: Compress Rootfs image
        id: compress_output
        working-directory: /builder/kdev.git/${{ inputs.os_release }}/qcow2/arm64
        run: |
          ls -alh
          zstd -9 rootfs.qcow2 -o /builder/release/rootfs.qcow2.zst
          rar a /builder/release/rootfs.img.rar rootfs.qcow2
          ls -alh /builder/release/
          echo "status=success" >> ${GITHUB_OUTPUT}

      - name: Upload image to release
        uses: ncipollo/release-action@main
        if: ${{ steps.compress_output.outputs.status }} == 'success' && !cancelled()
        with:
          tag: "kdev_arm64_release"
          artifacts: /builder/release/*
          allowUpdates: true
          removeArtifacts: false
          replacesArtifacts: true
          token: ${{ secrets.GITHUB_TOKEN }}
          body: |
            ### kdev release
            - 默认用户名(Default username): kdev
            - 默认密码(Default password): linux

